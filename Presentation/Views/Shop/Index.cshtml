@using Business.ViewModels.User.Shop
@model ShopIndexVM

<!-- main starts -->
<main>
	<!-- main-frame section starts -->
	<section class="main-frame no-select" style="background-image: url(assets/images/shop-page-title.jpg);">
		<div class="main-frame-title">
			<div class="container">
				<div class="row text-center">
					<div class="col-md-12">
						<div class="main-frame-title-text">
							Shop
						</div>
					</div>
					<div class="col-md-12">
						<div class="main-frame-breadcrumb">
							Home / Products
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
	<!-- main-frame section ends -->
	<!-- products section starts -->
	<section class="products no-select">
		<div class="container">
			<div class="row">
				<div class="col-lg-3">
					<div class="left-sidebar">
						<div class="search">
							<h4>Search</h4>
							<div class="search-product">
								<input type="search" name="" id="" placeholder="Search products"
									   class="search-product-input">
								<img src="~/assets/images/search-product-icon.png" alt="" class="search-product-icon">
							</div>
						</div>
						@if (Model.ProductCategories.Count != 0)
						{
							<div class="categories">
								<h4>Product categories</h4>
								<ul>
									@foreach (var category in Model.ProductCategories)
									{
										<li><a href="javascript:void(0);" onclick="loadProductsByCategoryId('@category.Id')">@category.Title</a></li>
									}
								</ul>
							</div>
						}
					</div>
				</div>
				<div class="col-lg-9 products-side">
					<div class="row">
						<div class="col-lg-4 col-md-6 pb-5">
							<div class="productt" id="1">
								<div class="product-image"
									 style="background-image: url(assets/images/product-1.jpg);">
									<div class="basket-wishlist-compare d-flex justify-content-center">
										<div class="add-basket text-center">
											<i class="fas fa-shopping-basket"></i>
										</div>
									</div>
								</div>
								<div class="product-inf">
									<h5 class="productt-name">A Omron 3 Series Blood Pressure</h5>
									<p><span>$</span><span class="price">39.99</span></p>
								</div>
							</div>
							<div id="productViewComponentContainer">
								@* Initial load of products using the default category (if needed) *@
								@await Component.InvokeAsync("Product")
							</div>
						</div>
						<div class="pagination d-flex justify-content-center">
							<div class="pagination-element pagination-active">1</div>
							<div class="pagination-element">2</div>
							<div class="pagination-element">></div>
						</div>
					</div>
					<div id="productViewComponentContainer"></div>
				</div>
			</div>
	</section>
	<!-- products section ends -->
</main>
<!-- main ends -->
@section Scripts {
	<script>
		function loadProductsByCategoryId(categoryId) {
			var container = document.getElementById('productViewComponentContainer');
			container.innerHTML = ''; // Clear the container before loading new products

			fetch(`/Products/GetProductsByCategory?categoryId=${categoryId}`)
				.then(response => response.text())
				.then(html => {
					container.innerHTML = html;
				})
				.catch(error => console.error('Error loading products:', error));
		}
	</script>
}